#+TITLE: Contributing with Markdown
#+AUTHOR: Mathieu Marques

** File Structure

Content consists of chapters and articles under =markdown/=. The chapters are
considered /timeless/ and are the content that should be kept up to date to
account for meta shifts and bannings. Articles on the other hand are dated
content.

- =articles/= ::
  Dated reports and theories.
- =chapters/= ::
  Most of the content goes there, organized in =ddeft/=, =ddft/= and =meandeck/=
  chapters. There's also =appendices/= for general-purposed resources.
- =partials/= ::
  Static content within the Wiki comes from those partials, this avoids having
  to maintain content within code.

** General Markdown Conventions

- Fill your paragraphs to 80 columns
- If your title makes the frontmatter data longer than 80 columns, think of a
  better heading for your document. In addition to annoy users with
  terminal-based clients, it also might not look as good in the homepage where
  article cards are rendered with their corresponding title with limited space
- Heading levels start at 2 in order to account for the page title
- Don't use unicode quote characters eg. =‘’= and =“”=. They might not render
  properly for everyone so ASCII quotes should be preferred
- A colon right in front of a word will be interpreted as a Markdown /directive/
  so make sure you have a space right after =:= when it is used as punctuation
- A dot right after a number character ie. when you end your sentence with a
  digit, renders as a numbered list item. To avoid this behavior, escape the dot
  with a backslash: =Brainstorm is good, you might want all 4\.=
- Depending on one's Markdown client, a dot at the end of a link can be
  considered part of said link eg. when you end your sentences with a link.
  Avoid bare links, wrap them with angled brackets =<= and =>=

In addition, a linter will run on your committed changes to detect necessary
improvements. A command is provided to help you sanitize your content locally:
=yarn lint:wiki=.

If you can, set up your editor of choice to run =prettier= on save when you edit
Wiki content. It'll do almost everything for you and make the linter happy
automatically.

** Scryfall

In some contexts, you can refer to card names within Markdown. To ease the
writing process and reduce typos, a number of shorthands for card names can be
found [[./src/tools/game/constants/Cards.ts][here]].

For parts where you query card imagery, you can optionally provide a specific
set using the 3-letters set code. By default, the first print for the card is
used.

#+BEGIN_SRC
DD | SLD
#+END_SRC

For instance, the above query will scry for /Doomsday/ from the /Secret Lair
Drop/ set. To identify the right code for your set, inspect the links at
[[https://scryfall.com/sets]].

In some specific cases, you will want to specify a collector number.This can be
achieved by suffixing the corresponding number. This is useful for sets with
multiple printings of the same card.

#+BEGIN_SRC
Duress | STA | 92
#+END_SRC

** Frontmatter

*** Chapters

Chapter documents can take advantage of a front section called /frontmatter/ in
Markdown parlance. It should start with a triple-dash line and end with another
triple-dash line. Within that section, a body of YAML metadata can be provided.

- =banner= (mandatory) ::
  Configure a banner for the chapter page. Scryfall syntax is supported.
- =title= (mandatory) ::
  A string for your chapter title. Wrap it with quotes to allow special
  characters within such as =:= and ='=.
- =authors= ::
  Comma-separated list of authors that you want to credit for the chapter
  page. Currently unused.
- =order= ::
  A number to specify the order of your chapter under its collapsible group
  within the sidebar. By default chapters are alpha-sorted using their slug ie.
  their path.

*** Articles

Articles documents don't have an =order= property but support other fields. Use
other existing articles for inspiration.

- =banner= (mandatory) ::
  Set a banner for the article to display in the homepage as well as at the top
  of the article in its own dedicated page. Scryfall syntax is supported.
- =kind= (mandatory) ::
  A kind symbol. Available values can be found in the keys at
  [[./src/tools/markdown/constants/Kind.ts][Kind.ts]].
- =title= (mandatory) ::
  The string used for your article page title. Note that this does not have any
  effect on the URL for your article.
- =authors= ::
  Comma-separated list of authors that you want to credit for the article.
- =tags= ::
  An array of tag symbols. Available values can be found in the keys at
  [[./src/tools/markdown/constants/Tag.ts][Tag.ts]]. Tags are used to dictate
  which card abbreviations should be documented in the sidebar.

** Tables of Content

An automatic table of content can be inserted in Markdown documents with an
empty level 2 heading that reads exactly =Table of Contents=. Leave that heading
empty since none of its content will be rendered.

The table will look for level 2 and 3 headings in the whole document and render
as a numbered list of anchor links for each of them.

** Custom Directives

A number of custom directives are parsed within Markdown content. For the
technicalities, the supported specifications for directives in Markdown are
presented
[[https://talk.commonmark.org/t/generic-directives-plugins-syntax/444][here]].

The following sections will assume you know of /inline/, /leaf/ and /container/
directives.

- Inline directives (single colon =:=) ::
  Inline markup where the text does not create a new paragraph.
- Leaf directives (double colons =::=) ::
  Create a new paragraph but accept no children within.
- Container directives (a pair of triple or more colons =:::=) ::
  Also create a new paragraph but accept children between the opening and
  closing pairs. It is possible to nest /container/ directives by using more
  than 3 colons.

*** Inline Card Links

You can insert inline Scryfall links for cards using the following syntax:

#+BEGIN_SRC markdown
:card[Brainstorm]
#+END_SRC

This will render an inline link reading "Brainstorm" and pointing to
[[https://scryfall.com/search?q=!Brainstorm]].

*** Card Rows

Use this directive to render card images within your Markdown content.
[[#scryfall][Scryfall queries]] are supported in order to specify which set to
use.

By default rows of cards are rendered with the =CENTERED= variant but you can
specify the variant with the =variant= keyword.

*Centered* rows allocate 25% of the available width for each image. Beyond 4
cards, images start shrinking so that they all fit on one line.

#+BEGIN_SRC markdown
:::row{variant=CENTERED}
Lion's Eye Diamond | MIR
Edge of Autumn
Thassa's Oracle
:::
#+END_SRC

*Pile* rows are rendered using a unique style to make them stand out to the
reader. In addition, they use a fixed width of 20% for each image.

#+BEGIN_SRC markdown
:::row{variant=PILE}
Lion's Eye Diamond | MIR
Edge of Autumn
Ideas Unbound
Lotus Petal
Thassa's Oracle
:::
#+END_SRC

*** Decklists

You can add decklists within your Markdown content, they will be rendered as a
collapsible block. Decklist files are located under =decklists/= and should be
dated using a =[year]/[month]/[day]/file.txt= (or =[year]/[month]/file.txt= when
you don't have the exact date) convention if able. Follow the existing structure
as an example. As an exception, decklist files found directly under =decklists/=
are used in non-dated content to ease maintenance eg. in chapters.

#+BEGIN_SRC markdown
::decklist{path=path/to/decklist/sans/extension}
#+END_SRC

The content of decklist files supports title, authors and colors metadata.
Columns in the rendered decklist can be created using blank lines. The following
example shows how to write a decklist file with 2 columns of cards and a 3rd
column for the sideboard. In doubt, follow existing conventions.

#+BEGIN_SRC text
// Title: Dummy Example
// Authors: Author One, Author Two
// Colors: {U}{B}{R}
4 Dark Ritual
4 Doomsday

4 Polluted Delta
1 Island

// Sideboard
1 Duress
#+END_SRC

For more details about color symbols, see the [[#mana][Mana section]].

*** Media Embeds

Media embeds are also supported:

*SoundCloud* embeds. Use the following directive and provide the media path as
found in the address bar.

#+BEGIN_SRC markdown
::soundcloud{url=ddftwiki/a-history-of-doomsday}
#+END_SRC

*Twitter* embeds. Provide the ID found in a tweet URL. They can easily introduce
[[https://web.dev/cls/][CLS issues]] in pages where they are rendered /too
early/ ie. too high in the document: don't overuse them.

#+BEGIN_SRC markdown
::tweet{id=1574576125535129600}
#+END_SRC

*YouTube* embeds. Provide the ID typically found in the URL behind the =v=
parameter in the address bar.

#+BEGIN_SRC markdown
::youtube{id=3LLIFHv5kbo}
#+END_SRC

*** Accordions

Collapsible blocks can be stacked against one another or used alone. Provide a
title for the clickable element as well as content for it.

The content can be Markdown text directly, or even directives.

#+BEGIN_SRC markdown
Note the `:::` to delimit a *container* block.

:::accordion[Click to expand]
*Always* be **casting** :card[Doomsday].
:::
#+END_SRC

Or pulled from a partial:

#+BEGIN_SRC markdown
Note the `::` to mean a *leaf* block with no children.

::accordion[Click to expand]{path=path/to/partial/one/sans/extension}
::accordion[Click to expand]{path=path/to/partial/two/sans/extension}
#+END_SRC

Do not specify the extension for the partial, =.md= is always assumed.

*** Mana

You can inline mana symbols /almost/ everywhere.

#+BEGIN_SRC markdown
{W} {U} {B} {R} {G}
#+END_SRC

When used collectively, for instance to indicate the color identity of an
archetype, use the same order as found on the back of a /Magic: the Gathering/
card. This makes searching for guilds and clans much easier later on. As an
exception to this rule and when referring to Doomsday colors, start with blue
and black as it makes it easier for the eyes to parse quickly the differences
from one wedge to the next.

The syntax that was chosen for the implementation can be found
[[https://mana.andrewgioia.com/icons.html][here]]. Currently only the mana costs
are available but loyalty and other color indicators may come soon :tm:.

*** Spoilers

Transient spoilers are supported through the `spoiler` directive.

#+BEGIN_SRC markdown
Always be casting :spoiler[Doomsday].
#+END_SRC

But also support block-level children, and nesting.

#+BEGIN_SRC markdown
:::spoiler
Always be casting :spoiler[Doomsday].
:::
#+END_SRC

*** Spoils Calculator

Insert a /Spoils of the Vault/ widget to let the reader run success rate
simulations directly within the Markdown content.

#+BEGIN_SRC markdown
::spoils
#+END_SRC
