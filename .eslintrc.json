{
  "env": {
    "browser": true,
    "es2020": true
  },
  "extends": [
    "airbnb",
    "airbnb/hooks",
    "plugin:@typescript-eslint/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "overrides": [
    {
      "files": ["*.{ts,tsx}"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "react/prop-types": "off",
        "react/require-default-props": "off"
      }
    },
    {
      "files": ["*.test.{ts,tsx}"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "global-require": "off",
        "import/no-extraneous-dependencies": "off"
      }
    },
    {
      "files": ["jest.*.js"],
      "rules": {
        "@typescript-eslint/no-var-requires": "off"
      }
    },
    {
      "files": ["src/mocks/**/*.ts"],
      "rules": {
        "import/no-extraneous-dependencies": [
          "error",
          { "devDependencies": true }
        ]
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint", "import", "react"],
  "root": true,
  "rules": {
    "@typescript-eslint/explicit-module-boundary-types": [
      "error",
      { "allowTypedFunctionExpressions": true }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-use-before-define": "error",
    "camelcase": ["warn", { "ignoreDestructuring": true }],
    "import/extensions": [
      "error",
      "ignorePackages",
      { "ts": "never", "tsx": "never" }
    ],
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "react/jsx-no-useless-fragment": ["warn", { "allowExpressions": true }],
    "no-console": ["warn", { "allow": ["error", "info"] }],
    "no-nested-ternary": "off",
    "no-use-before-define": "off",
    "no-shadow": "off",
    "no-underscore-dangle": "off",
    "react/jsx-filename-extension": [
      "error",
      { "extensions": [".jsx", ".tsx"] }
    ],
    "react/jsx-props-no-spreading": "off",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "no-restricted-syntax": [
      "error",
      "ForInStatement",
      "LabeledStatement",
      "WithStatement"
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
